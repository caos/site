[{"html":"\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Before_we_begin\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Before_we_begin\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tBefore we begin\n\t\t\t\t\t</h3><blockquote>\n<p>This is an early version of our doc generator. Some things may change until we hit version 1.0.\nDiese Dokumentation ist auch ein WIP und wird laufend aktualisiert.</p>\n</blockquote>\n<p>The SSG supports I18N. Currently we‘re testing the following languages:</p>\n<table>\n<thead>\n<tr>\n<th align=\"right\">Language</th>\n<th align=\"left\">ID</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"right\">English</td>\n<td align=\"left\">en</td>\n</tr>\n<tr>\n<td align=\"right\">German</td>\n<td align=\"left\">de</td>\n</tr>\n<tr>\n<td align=\"right\">Italian</td>\n<td align=\"left\">it</td>\n</tr>\n<tr>\n<td align=\"right\">Danish</td>\n<td align=\"left\">da</td>\n</tr>\n</tbody></table>\n","metadata":{"title":"Introduction"},"subsections":[{"slug":"Before_we_begin","title":"Before we begin","level":3}],"slug":"Introduction","file":"00-introduction.en.md"},{"html":"\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"General_Structure\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#General_Structure\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tGeneral Structure\n\t\t\t\t\t</h3><p>To deploy a successful build, you need to have a <code>docs</code> folder on your root directory.</p>\n<p>This folder contains subfolders that are mapped to routes of your doc page later,\na <code>index.svelte</code> file for the homepage, and\na <code>static</code> folder for all assets and metadata.</p>\n<p>The <code>index.svelte</code> as well as the static folder with a <code>manifest.json</code> is mandatory, otherwise the build will fail.\nOther files referenced by the homepage or within markdown has to be included to the static folder.</p>\n<div class=''><pre class='language-bash'><code>├ docs\n│ ├ get_started\n│ │ ├ 00-indroduction.en.md\n│ │ ├ 00-indroduction.de.md\n│ │ ├ 00-indroduction.it.md\n│ │ ├ 01-get-started.en.md\n│ │ ├ 01-get-started.de.md\n│ │ ├ 01-get-started.it.md\n│ │ ├ 02-concluding.en.md\n│ │ ├ 02-concluding.de.md\n│ │ └ 02-concluding.it.md\n│ ├ api\n│ ├ ├ 00-indroduction.en.md\n│ │ ├ 01-get-started.en.md\n│ │ └ 02-concluding.en.md\n  ├ static\n  │ ├ manifest.json\n  │ ├ favicon.ico\n  │ ├ android-chrome-192x192.png\n  └ index.svelte</code></pre></div><p>According to the configuration above, two routes with the names <code>getting_started</code> and <code>api</code> are generated.</p>\n<p>A doc page consists of one ore more <code>markdown</code> files, fetched in sorting order. \nSo prefixing with numbers might be a good choice for organizing your structure.</p>\n<p>Anchors are automatically generated using headings in the documentation and by default they are latinised.</p>\n\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Markdown_Files\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Markdown_Files\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tMarkdown Files\n\t\t\t\t\t</h3><p>Markdown files contain a meta data section including the <code>title</code>, used as section header later and other possibly helpful information about the author of the page</p>\n<div class=\"side-by-side\"><div class=\"copy\"><p>Take a look at this example:</p>\n</div><div class=\"code\"><div class=''><pre class='language-undefined'><code><span class=\"hljs-section\">&lt;!-- start of file --&gt;\n---</span>\n<span class=\"hljs-section\">title: Introduction\n---</span>\n<span class=\"xml\"><span class=\"hljs-comment\">&lt;!-- markdown here --&gt;</span></span></code></pre></div></div></div><p>Markdown files are compiled to html and styled with a custom theme scheme (currently a work in progress).</p>\n<p>Currently the <code>marked.js</code> renderer is taking care of this markdown files, treating some syntax as custom and some as default.\nTake a look at the sections below to get an understanding of whats going on.</p>\n\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"links\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#links\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tlinks\n\t\t\t\t\t</h4><p>Links to external targets (starting with http) are opened in a new tab.</p>\n<p>If you want to reference to an other article of your doc page, you can use the <code>title</code> concatenated to your <code>route</code>.</p>\n<div class=\"side-by-side\"><div class=\"copy\"><p>This link takes you to <a href=\"get_started#General_Structure\">General Structure</a>.</p>\n</div><div class=\"code\"><div class=''><pre class='language-undefined'><code>[<span class=\"hljs-string\">General Structure</span>](<span class=\"hljs-link\">get_started#General_Structure</span>)</code></pre></div></div></div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"headings\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#headings\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\theadings\n\t\t\t\t\t</h4><p>Headings of level three and four are slugged, so headings like</p>\n<div class=''><pre class='language-undefined'><code><span class=\"hljs-section\">### header</span>\n<span class=\"hljs-section\">#### header-2 </span></code></pre></div><p>will appear in the navigation and can be referenced by links.</p>\n<blockquote>\n<p>The meta-data title and headings of your markdown files are slugged, so that a navigation can be build.\nMake sure all titles and headings are distinct, otherwise your build will end up failing!</p>\n</blockquote>\n\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"code\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#code\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tcode\n\t\t\t\t\t</h4><p>Code is highlighted accoding to the specified language</p>\n<div class=''><pre class='language-undefined'><code><span class=\"hljs-code\">\t```yaml</span>\n<span class=\"hljs-code\">\tconfig: main.yml</span>\n<span class=\"hljs-code\">\t```</span></code></pre></div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"code_switcher\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#code_switcher\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tcode switcher\n\t\t\t\t\t</h4><p>Code is highlighted accoding to the specified language</p>\n<div class=''><pre class='language-markup'><code>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"link\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span></code></pre></div><div class=''><pre class='language-javascript'><code>\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">''</span>);</code></pre></div><div class=''><pre class='language-undefined'><code>\t<span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">main.yml</span></code></pre></div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"hr\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#hr\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\thr\n\t\t\t\t\t</h4><p>hr can be used to split content, but it will work for code blocks on the right only.</p>\n<div class=''><pre class='language-undefined'><code>---\n\nLeft block (can by anything)\n\nRight block (only code)</code></pre></div><p>will be rendered to</p>\n<div class=\"side-by-side\"><div class=\"copy\"><p>Left block can be <strong>anything</strong>.</p>\n</div><div class=\"code\"><div class=''><pre class='language-javascript'><code>\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'This can be any code block'</span>);</code></pre></div></div></div><p>This can be useful to explain a code snipped.</p>\n\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"other\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#other\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tother\n\t\t\t\t\t</h4>\n\t\t\t\t\t<h5>\n\t\t\t\t\t\t<span id=\"false\" class=\"offset-anchor\" data-scrollignore></span>\n\t\t\t\t\t\t<a href=\"get_started#false\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tblockquote\n\t\t\t\t\t</h5><p>if you have to highlight something noteworthy.</p>\n<div class=''><pre class='language-undefined'><code><span class=\"hljs-quote\">&gt; This is a blockquote and it contains important infos</span></code></pre></div><blockquote>\n<p>This is a blockquote and it contains important infos</p>\n</blockquote>\n\n\t\t\t\t\t<h5>\n\t\t\t\t\t\t<span id=\"false\" class=\"offset-anchor\" data-scrollignore></span>\n\t\t\t\t\t\t<a href=\"get_started#false\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\thtml\n\t\t\t\t\t</h5><p>You can also use raw HTML in your Markdown, and it&#39;ll mostly work pretty well.</p>\n<div class=''><pre class='language-markup'><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"border: 1px solid white; padding: 1rem; font-style: italic;\"</span>&gt;</span>hello<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></div><div style=\"border: 1px solid white; padding: 1rem; font-style: italic; margin-bottom: 20px;\">hello</div>\n\n\n\t\t\t\t\t<h5>\n\t\t\t\t\t\t<span id=\"false\" class=\"offset-anchor\" data-scrollignore></span>\n\t\t\t\t\t\t<a href=\"get_started#false\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tother markdown syntax\n\t\t\t\t\t</h5><p>These are other blocks which are highlighted but have standard conventions.</p>\n<ul>\n<li>list</li>\n<li>listitem</li>\n<li>paragraph</li>\n<li>table</li>\n<li>tablerow</li>\n<li>tablecell</li>\n</ul>\n\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Translating_the_API_docs\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Translating_the_API_docs\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tTranslating the API docs\n\t\t\t\t\t</h3><p>Default language is set in manifest.json. Make sure an attribute <code>lang</code> is set.</p>\n<p>Anchors are automatically generated using headings in the documentation and by default they are latinised to make sure the URL is always conforming to RFC3986.</p>\n<p>If we need to translate the API documentation to a language using unicode chars, we can setup this app to export the correct anchors by setting up <code>SLUG_PRESERVE_UNICODE</code> to <code>true</code> in <code>config.js</code>.</p>\n","metadata":{"title":"Doc structure","description":"This document explains how syntax is rendered."},"subsections":[{"slug":"General_Structure","title":"General Structure","level":3},{"slug":"Markdown_Files","title":"Markdown Files","level":3},{"slug":"links","title":"links","level":4},{"slug":"headings","title":"headings","level":4},{"slug":"code","title":"code","level":4},{"slug":"code_switcher","title":"code switcher","level":4},{"slug":"hr","title":"hr","level":4},{"slug":"other","title":"other","level":4},{"slug":"Translating_the_API_docs","title":"Translating the API docs","level":3}],"slug":"Doc_structure","file":"01-doc-structure.en.md"},{"html":"\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Go_structures\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Go_structures\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tGo structures\n\t\t\t\t\t</h3><p>You can reference go struct tables from our go struct generator.\nProvide a <code>doc_assets</code> folder with all generated files in it.\nMake sure that the <code>.md</code> file consists of no other than the table itself and metadata which defines name and description of the struct</p>\n<p>Take a look at the following example</p>\n<div class=''><pre class='language-undefined'><code><span class=\"hljs-code\">\t--- </span>\n<span class=\"hljs-code\">\ttitle: ToolsetSpec</span>\n<span class=\"hljs-code\">\tdescription: BOOM reconciles itself if a boomVersion is defined, if no boomVersion is defined there is no reconciling.</span>\n<span class=\"hljs-code\">\t---</span>\n\n| Attribute                   | Description                                                                     | Default | Collection  |\n| --------------------------- | ------------------------------------------------------------------------------- | ------- | ----------  |\n| boomVersion                 | Version of BOOM which should be reconciled                                      |         |             |\n| forceApply                  | Relative folder path where the currentstate is written to                       |         |             |\n| currentStatePath            | Flag if --force should be used by apply of resources                            |         |             |\n| preApply                    | Spec for the yaml-files applied before applications , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">PreApply.md</span>)       |         |             |\n| postApply                   | Spec for the yaml-files applied after applications , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">PostApply.md</span>)       |         |             |\n| prometheus-operator         | Spec for the Prometheus-Operator , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">PrometheusOperator.md</span>)                |         |             |\n| logging-operator            | Spec for the Banzaicloud Logging-Operator , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">LoggingOperator.md</span>)          |         |             |\n| prometheus-node-exporter    | Spec for the Prometheus-Node-Exporter , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">PrometheusNodeExporter.md</span>)       |         |             |\n| prometheus-systemd-exporter | Spec for the Prometheus-Systemd-Exporter , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">PrometheusSystemdExporter.md</span>) |         |             |\n| grafana                     | Spec for the Grafana , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">grafana/Grafana.md</span>)                               |         |             |\n| ambassador                  | Spec for the Ambassador , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">Ambassador.md</span>)                                 |         |             |\n| kube-state-metrics          | Spec for the Kube-State-Metrics , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">KubeStateMetrics.md</span>)                   |         |             |\n| argocd                      | Spec for the Argo-CD , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">argocd/Argocd.md</span>)                                 |         |             |\n| prometheus                  | Spec for the Prometheus instance , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">Prometheus.md</span>)                        |         |             |\n| loki                        | Spec for the Loki instance , [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">Loki.md</span>)                                    |         |             |</code></pre></div><p>which produces the following table:</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Default</th>\n<th>Collection</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>boomVersion</td>\n<td>Version of BOOM which should be reconciled</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>forceApply</td>\n<td>Relative folder path where the currentstate is written to</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>currentStatePath</td>\n<td>Flag if --force should be used by apply of resources</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>preApply</td>\n<td>Spec for the yaml-files applied before applications , <a href=\"PreApply.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>postApply</td>\n<td>Spec for the yaml-files applied after applications , <a href=\"PostApply.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>prometheus-operator</td>\n<td>Spec for the Prometheus-Operator , <a href=\"PrometheusOperator.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>logging-operator</td>\n<td>Spec for the Banzaicloud Logging-Operator , <a href=\"LoggingOperator.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>prometheus-node-exporter</td>\n<td>Spec for the Prometheus-Node-Exporter , <a href=\"PrometheusNodeExporter.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>prometheus-systemd-exporter</td>\n<td>Spec for the Prometheus-Systemd-Exporter , <a href=\"PrometheusSystemdExporter.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>grafana</td>\n<td>Spec for the Grafana , <a href=\"grafana/Grafana.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ambassador</td>\n<td>Spec for the Ambassador , <a href=\"Ambassador.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>kube-state-metrics</td>\n<td>Spec for the Kube-State-Metrics , <a href=\"KubeStateMetrics.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>argocd</td>\n<td>Spec for the Argo-CD , <a href=\"argocd/Argocd.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>prometheus</td>\n<td>Spec for the Prometheus instance , <a href=\"Prometheus.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>loki</td>\n<td>Spec for the Loki instance , <a href=\"Loki.md\">here</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"References\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#References\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tReferences\n\t\t\t\t\t</h4><p>To reference a table ...</p>\n","metadata":{"title":"Go structs"},"subsections":[{"slug":"Go_structures","title":"Go structures","level":3},{"slug":"References","title":"References","level":4}],"slug":"Go_structs","file":"02-go-structs.en.md"},{"html":"\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Aspects\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Aspects\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tAspects\n\t\t\t\t\t</h3><p>Of course every doc site should have its unique design. There are three aspects of which you can customize the output of your application.</p>\n<ol>\n<li>Contextual elements</li>\n<li>Homepage</li>\n<li>Markdown styles</li>\n</ol>\n\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"Contextual_elements\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Contextual_elements\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tContextual elements\n\t\t\t\t\t</h4><p>The purpose of these <code>elements</code> is to define the naming and appearance of the application. Most information needed can be extracted from the manifest.json and an asset folder.</p>\n<p>As for now, name of the application, default language, color-scheme and favicons can be defined in a <code>manifest.json</code> file and any referenced items such as images or icons have to be provided thrugh an asset folder called <code>static</code> located at the root of <code>docs</code> folder. \nFor more information see <a href=\"get_started#General_Structure\">General Structure</a>.</p>\n<p>Take a look at this example</p>\n<div class=''><pre class='language-undefined'><code>{\n<span class=\"hljs-code\">\t\"background_color\": \"#ffffff\",</span>\n<span class=\"hljs-code\">\t\"theme_color\": \"#159794\",</span>\n<span class=\"hljs-code\">\t\"name\": \"CAOS Autogenerated Documentation site\",</span>\n<span class=\"hljs-code\">\t\"short_name\": \"CAOS Docs\",</span>\n<span class=\"hljs-code\">\t\"display\": \"minimal-ui\",</span>\n<span class=\"hljs-code\">\t\"start_url\": \"/\",</span>\n<span class=\"hljs-code\">\t\"icons\": [</span>\n<span class=\"hljs-code\">\t\t{</span>\n<span class=\"hljs-code\">\t\t  \"src\": \"icons/android-chrome-256x256.png\",</span>\n<span class=\"hljs-code\">\t\t  \"sizes\": \"512x512\",</span>\n<span class=\"hljs-code\">\t\t  \"type\": \"image/png\"</span>\n<span class=\"hljs-code\">\t\t},</span>\n<span class=\"hljs-code\">\t\t{</span>\n<span class=\"hljs-code\">\t\t  \"src\": \"icons/android-chrome-192x192.png\",</span>\n<span class=\"hljs-code\">\t\t  \"sizes\": \"192x192\",</span>\n<span class=\"hljs-code\">\t\t  \"type\": \"image/png\"</span>\n<span class=\"hljs-code\">\t\t}</span>\n<span class=\"hljs-code\">\t  ]</span>\n}</code></pre></div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"Homepage\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Homepage\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tHomepage\n\t\t\t\t\t</h4><p>The homepage can be set using a .svelte file, a superset of HTML which includes styles and scripts.\nTo implement language specific content, get the language code from params.</p>\n<div class=''><pre class='language-javascript'><code> <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">preload</span>(<span class=\"hljs-params\">page, session</span>) </span>{\n\t\t<span class=\"hljs-keyword\">const</span> {params} = page;\n\t\t<span class=\"hljs-keyword\">const</span> {lang} = params;\n\t\t<span class=\"hljs-keyword\">return</span> {lang};\n }</code></pre></div><p>then you can use handlebar like syntax.</p>\n<div class=''><pre class='language-markup'><code>{#if lang == 'en'}\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>This is the doc generator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n{:else if lang == 'de'}\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Das ist unser doc generator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n{:else if lang == 'it'}\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Questo è il nostro doc generator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n{:else}\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>This is the doc generator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n{/if}</code></pre></div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"Markdown_styles\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Markdown_styles\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tMarkdown styles\n\t\t\t\t\t</h4><p>Idea is to be able to provide a dedicated <code>.css</code> file for markdown highlighting.\nThese styles are a work in progress. </p>\n","metadata":{"title":"Personalization"},"subsections":[{"slug":"Aspects","title":"Aspects","level":3},{"slug":"Contextual_elements","title":"Contextual elements","level":4},{"slug":"Homepage","title":"Homepage","level":4},{"slug":"Markdown_styles","title":"Markdown styles","level":4}],"slug":"Personalization","file":"03-personalization.en.md"},{"html":"\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"Overview\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"get_started#Overview\" class=\"anchor\" aria-hidden=\"true\"> <i class=\"las la-link\"></i> </a>\n\t\t\t\t\t\tOverview\n\t\t\t\t\t</h4><p>The <code>manifest.json</code>, and <code>favicon.ico</code> are mandatory. If its all set and done, reensure all of this listed files are commited and pushed.</p>\n<div class=''><pre class='language-bash'><code>├ docs\n  ├ manifest.json\n  ├ static\n  │ ├ favicon.ico\n  └ index.svelte</code></pre></div>","metadata":{"title":"Concluding"},"subsections":[{"slug":"Overview","title":"Overview","level":4}],"slug":"Concluding","file":"04-concluding.en.md"}]