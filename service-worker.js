!function(){"use strict";const t=1602484249049,o="cache"+t,e=["/client/client.c274b1e1.js","/client/inject_styles.5607aec6.js","/client/client.fdadb9ef.js","/client/en.a24b706a.js","/client/de.a162714d.js","/client/index.ac857f10.js","/client/[slug].912d6cf7.js"].concat(["/service-worker-index.html","/base.css","/caos.svg","/fonts/ailerons/ailerons.otf","/fonts/fira-mono/fira-mono-latin-400.woff2","/fonts/roboto/roboto-latin-400.woff2","/fonts/roboto/roboto-latin-400italic.woff2","/fonts/roboto/roboto-latin-500.woff2","/fonts/roboto/roboto-latin-500italic.woff2","/fonts/rubik/Rubik-Black.ttf","/fonts/rubik/Rubik-BlackItalic.ttf","/fonts/rubik/Rubik-Bold.ttf","/fonts/rubik/Rubik-BoldItalic.ttf","/fonts/rubik/Rubik-Italic.ttf","/fonts/rubik/Rubik-Light.ttf","/fonts/rubik/Rubik-LightItalic.ttf","/fonts/rubik/Rubik-Medium.ttf","/fonts/rubik/Rubik-MediumItalic.ttf","/fonts/rubik/Rubik-Regular.ttf","/icons/android-chrome-192x192.png","/icons/android-chrome-256x256.png","/icons/apple-touch-icon.png","/icons/favicon-16x16.png","/icons/favicon-32x32.png","/icons/favicon.ico","/icons/mstile-150x150.png","/icons/safari-pinned-tab.svg","/logos/caos-logo-outline-1px-pictureonly.svg","/logos/caos-logo-outline-pictureonly.svg","/logos/orbos-logo-solo-darkdesign.svg","/logos/zitadel-logo-solo-darkdesign.svg","/manifest.json","/prism.css"]),s=new Set(e);self.addEventListener("install",(t=>{t.waitUntil(caches.open(o).then((t=>t.addAll(e))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((async t=>{for(const e of t)e!==o&&await caches.delete(e);self.clients.claim()})))})),self.addEventListener("fetch",(o=>{if("GET"!==o.request.method||o.request.headers.has("range"))return;const e=new URL(o.request.url);e.protocol.startsWith("http")&&(e.hostname===self.location.hostname&&e.port!==self.location.port||(e.host===self.location.host&&s.has(e.pathname)?o.respondWith(caches.match(o.request)):"only-if-cached"!==o.request.cache&&o.respondWith(caches.open("offline"+t).then((async t=>{try{const e=await fetch(o.request);return t.put(o.request,e.clone()),e}catch(e){const s=await t.match(o.request);if(s)return s;throw e}})))))}))}();
